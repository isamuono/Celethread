<head>
  <%= stylesheet_link_tag 'colorpicker/spectrum', media: 'all', 'data-turbolinks-track': 'reload' %>
  <%= javascript_include_tag "colorpicker/spectrum.js" %>
</head>
<div class="modal-dialog modal-dialog-centered">
  <div class="channel-edit-form">
    <%= form_with model: @channel_edit_modal, url: { controller: 'channels', action: 'update', method: :patch } do |f| %>
      <div class="modal-content channel-edit-container">
        <div class="modal-header">
          <p class="modal-title channel-edit-title">チャンネル情報を編集</p>
        </div>
        <div class="modal-body channel-edit-modal-body">
          <%= f.hidden_field :id %>
          <%= f.hidden_field :community_id %>
          <div class="form-group">
            <%= f.label "チャンネル名", class: "label-text3" %>
            <%= f.text_field :channelName, class: "form-control", id: "channelName#{ channel_edit.id }", placeholder: "チャンネル名" %>
          </div>
          <div class="form-group" id="text_area">
            <%= f.label "チャンネルの説明文", class: "label-text3" %>
            <%= f.text_area :description, class: "form-control", id: "channel-description", rows: "4", placeholder: "チャンネルの説明文を書くことができます", maxlength: "2000" %>
            <small class="form-text text-muted text-right help-text2" >※2000文字以内</small>
          </div>
          
          <div class="form-group color-select-form">
            <%= f.label "イメージカラー", class: "label-text3" %>
            <%= f.text_field :color, class: "form-control", id: "color#{ channel_edit.id }" %>
          </div>
        
          <div class="form-group">
            <%= f.label "閲覧範囲の選択", class: "label-text3" %>
            <div class="radio-box">
              <label>
                <%= f.radio_button :public, "1", class: "radiobutton" %>
                <span class="radio-label">コミュニティー管理者のみ</span>
              </label>
              <label>
                <%= f.radio_button :public, "2", class: "radiobutton" %>
                <span class="radio-label">メンバー全員可</span>
              </label>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <%= link_to "/channels/#{ channel_edit.id }", class: "channel-destroy-link", method: :delete, data: { sweet_confirm: "#{ channel_edit.channelName } チャンネルを削除してもよろしいですか？" } do %>
            <span type="button" class="btn btn-destroy">削除する</span>
          <% end %>
          <span type="button" class="btn btn-cancel" data-dismiss="modal">キャンセル</span>
          <%= f.submit "変更を保存", class: "btn btn-primary" %>
        </div>
      </div>
    <% end %>
  </div>
</div>
<script>
  var resizeFlg; //setTimeoutの待機中かを判定するフラグ
  
  function windowResizeFunc(){
  
    //resizeFlgに値が設定されている場合は、待ち時間中なのでリセットする
    if (resizeFlg !== false) {
        clearTimeout(resizeFlg);
    }
    //300ms待機後にリサイズ処理を実施する
    resizeFlg = setTimeout( function() {
      resizeElement();    //リサイズを実施する処理
    }, 300);
  }
  
  window.addEventListener('resize', windowResizeFunc);
  window.addEventListener('load', resizeElement());
  
  function resizeElement(){
    const windowWidth = document.documentElement.clientWidth;
    
    const resizebox1 = document.getElementById("channelName<%= @channel_edit_modal.id %>");
      if (windowWidth <= 767) {
        resizebox1.className = "form-control";
      } else if (windowWidth >= 768) {
        resizebox1.className = "form-control form-control-lg";
      } 
    
    const resizebox2 = document.getElementById("channel-description");
      if (windowWidth <= 767) {
        resizebox2.className = "form-control";
      } else if (windowWidth >= 768) {
        resizebox2.className = "form-control form-control-lg";
      }
  }
  
  //傾きを変える度に現在の傾きを判定
  window.orientationchange = function (){
    if (Math.abs(window.orientation) === 0){
      window.reload(); 
    } else {
      window.reload();
    }
  };
  
  $('#color<%= channel_edit.id %>').spectrum({
    allowEmpty: true,
    showPaletteOnly: true,
    showPalette: true,
    preferredFormat: "hex",
    palette: [
      'black', 'gray', 
      'steelblue', 'navy', 'blue', 'royalblue', 'dodgerblue', 'deepskyblue', 'lightskyblue', 
      'darkcyan', 'green', 'mediumseagreen', 'palegreen', 'greenyellow', 'lime', 'yellowgreen', 'darkkhaki', 'khaki', 
      '#fff450', 'gold', '#fcc800', 'orange', 'darkorange', '#8f6552', 'saddlebrown', 'firebrick', 'tomato', 'orangered', 'red', 'crimson', '#e73562',
      'deeppink', 'hotpink', 'lightpink', 'violet', 'darkmagenta', 'darkviolet'
    ],
    //hideAfterPaletteSelect: true,
  });
  
  $('#channel-description').on('input', function() {
    $(this).height(0).innerHeight(this.scrollHeight);
  });
  
  // 削除時確認ダイアログ(sweetalert2)
  $('.channel-destroy-link').on('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
  
    var $link = $(this);
  
    swal.fire({
      icon: 'warning',
      iconColor: 'red',
      title: $link.data('sweet-confirm'),
      text: 'このチャンネルのスレッド、イベントは全て削除されます。本当によろしいですか？',
      confirmButtonText: '削除する',
      confirmButtonColor: '#d33',
      showCancelButton: true,
      cancelButtonText: 'キャンセル',
      focusCancel: true,
      position : 'center',
      allowEscapeKey: true, //escボタン
      customClass: {
        popup: 'sweetalert-community-destroy'
      }
    }).then(function(result) {
      if (result.isConfirmed) {
        $.ajax({
          type: 'DELETE',
          url: '/channels/<%= channel_edit.id %>',
          data: { cp_current_user_id: '<%= cp_current_user.id %>' }
        });
        /*.done(function(response) {
          
        })
        .fail(function(xhr) {
          
        });*/
      }
    }, function(dismiss) {});
  });
</script>